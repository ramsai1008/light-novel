'use client'

import { useEffect, useState } from 'react'
import { db } from '@/lib/firebase'
import { collection, getDocs } from 'firebase/firestore'
import Link from 'next/link'
import { useRouter } from 'next/navigation'

type Novel = {
  id: string
  title: string
  tags?: string[]
  coverUrl?: string
}

export default function SearchPage() {
  const [novels, setNovels] = useState<Novel[]>([])
  const [query, setQuery] = useState('')
  const [loading, setLoading] = useState(true)
  const router = useRouter()

  useEffect(() => {
    const fetchNovels = async () => {
      const snap = await getDocs(collection(db, 'novels'))
      const all = snap.docs.map((doc) => ({
        id: doc.id,
        ...doc.data(),
      })) as Novel[]
      setNovels(all)
      setLoading(false)
    }

    fetchNovels()
  }, [])

  // Filter by title
  const filtered = novels.filter((n) =>
    n.title.toLowerCase().includes(query.toLowerCase())
  )

  // Group by first tag or "Other"
  const grouped: { [tag: string]: Novel[] } = {}
  for (const novel of filtered) {
    const tag = novel.tags?.[0] || 'Other'
    if (!grouped[tag]) grouped[tag] = []
    grouped[tag].push(novel)
  }

  const handleSelect = (novelId: string) => {
    router.push(`/novels/${novelId}`)
  }

  return (
    <div className="p-6 max-w-xl mx-auto">
      <h1 className="text-2xl font-bold mb-4">üîç Search Novels by Title</h1>

      <input
        type="text"
        className="border p-2 w-full mb-4"
        placeholder="Type to search..."
        value={query}
        onChange={(e) => setQuery(e.target.value)}
      />

      {loading ? (
        <p>Loading...</p>
      ) : query && filtered.length === 0 ? (
        <p>No results found.</p>
      ) : (
        Object.entries(grouped).map(([tag, novels]) => (
          <div key={tag} className="mb-4">
            <h3 className="text-md font-semibold mb-1 text-gray-600">{tag}</h3>
            <ul className="border rounded p-2">
              {novels.slice(0, 5).map((n) => (
                <li
                  key={n.id}
                  onClick={() => handleSelect(n.id)}
                  className="cursor-pointer text-sm py-1 px-2 hover:bg-gray-100 rounded"
                >
                  {n.title}
                </li>
              ))}
            </ul>
          </div>
        ))
      )}
    </div>
  )
}
